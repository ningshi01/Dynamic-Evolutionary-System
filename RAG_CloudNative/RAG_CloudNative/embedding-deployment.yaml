apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: embedding-model-cache-pvc
  namespace: act-test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi # Adjust size based on your model cache needs
  # storageClassName: "your-storage-class" # Uncomment and specify if you have a specific storage class
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: embedding-deployment
  namespace: act-test
  labels:
    app: embedding-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: embedding-service
  template:
    metadata:
      labels:
        app: embedding-service
    spec:
      volumes:
      - name: cache-volume
        persistentVolumeClaim:
          claimName: embedding-model-cache-pvc
      - name: dshm
        emptyDir:
          medium: Memory
      containers:
      - name: embedding-container
        image: ghcr.nju.edu.cn/sasha0552/vllm:latest
        # swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/vllm/vllm-openai:v0.9.1
        # docker.1ms.run/vllm/vllm-openai:latest
        args: [
          "--model", "Qwen/Qwen3-Embedding-0.6B",
          "--trust-remote-code",
          "--port", "8000"
        ]
        env:
        - name: HF_ENDPOINT
          value: "https://hf-mirror.com"
        # - name: HUGGING_FACE_HUB_TOKEN
        #   valueFrom:
        #     secretKeyRef:
        #       name: hf-token-secret
        #       key: token
        ports:
        - containerPort: 8000
        resources:
          limits:
            nvidia.com/gpu: "1" # Requesting 1 GPU
          requests:
            nvidia.com/gpu: "1"
        volumeMounts:
        - mountPath: /root/.cache/huggingface
          name: cache-volume
        - mountPath: /dev/shm
          name: dshm
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8000
        #   initialDelaySeconds: 60
        #   periodSeconds: 15
        #   timeoutSeconds: 5
        #   failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: embedding-service
  namespace: act-test
spec:
  selector:
    app: embedding-service
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8000
  type: NodePort 